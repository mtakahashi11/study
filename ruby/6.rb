  # メソッド
  # オブジェクトを操作する手続きのことをメソッドと呼びます。
  # メソッド呼出し
  # メソッドはメッセージを受け取ったオブジェクトが知っていれば実行します。
  # 「レシーバ.メソッド名」や「レシーバ::メソッド名」の形で呼べます。
  # 関数的メソッド
  # レシーバの指定を省略した形で呼び出します。
  # レシーバの指定を省略しますが、関数的メソッドもオブジェクトと関連付けられたメソッドです。
  # 名前付き引数のハッシュ
  # ハッシュオブジェクトを使うことによって、仮引数名を指定して引数へ値を渡すメソッド呼出しがおこなえます。
  # yield
  # ブロック付きメソッド呼出しをした時に、ブロックの中の処理を操作するのに使うことができます。
  # メソッドの別名
  # aliasを使うことによって、既に定義したメソッドに新しい名前を付けることができます。
  # 演算子メソッド
  # メソッドであることを意識せずに使っているメソッドがあります。

  # def cubage(args)
  #   # デフォルト値の設定
  #   x = args[:x] || 10
  #   y = args[:y] || 10
  #   h = args[:h] || 10
  #   return x * y * h
  # end
  # p cubage(:h => 100)


  # def double
  #   yield
  #   yield
  # end
  # double { puts "Two" }

  # def foo
  #   yield "Hello!"
  # end
  # foo {|x| puts x}

  # def foo
  #   yield "Hello!", "Enjoy", 42 + 23
  # end
  # foo {|x, y, z| puts x, y, z }

  def hello
    puts("Hello!")
  end
  alias new_hello hello
  new_hello